pipeline {
    agent {
        docker {
            image 'mcr.microsoft.com/dotnet/sdk:9.0'
        }
    }

    options {
        timestamps()
    }

    environment {
        DOTNET_CLI_HOME = "${env.WORKSPACE}/.dotnet"
        DOTNET_CLI_TELEMETRY_OPTOUT = '1'
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE = "1"
    }

    stages {
        stage('Environment Check: Validate .NET SDK') {
            steps {
                sh '''
                    echo "Checking if 'dotnet' is available..."
                    if ! command -v dotnet > /dev/null; then
                        echo "ERROR: dotnet is not installed or not in PATH"
                        exit 1
                    fi

                    echo "dotnet SDK info:"
                    dotnet --info
                '''
            }
        }

        stage('Build & Package: Run custom build script') {
            steps {
                sh '''
                    echo "Running build and packaging script..."
                    ./cicd/deb-publish.sh
                '''
            }
        }

        stage('Archive Artifacts: Store .deb packages') {
            steps {
                archiveArtifacts artifacts: 'release/*.deb', onlyIfSuccessful: true
            }
        }
    }

    post {
        failure {
            echo '❌ Build failed. Check the log above for details.'
        }
        success {
            echo '✅ Build succeeded. Artifacts archived.'
        }
    }
}